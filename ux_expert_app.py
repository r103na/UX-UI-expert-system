import streamlit as st
from PIL import Image
import numpy as np
from interface import perform_ocr_analysis, check_text_contrast, analyze_clutter

# ========== –¢–µ–∫—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ==========
good_text = "#### ‚úÖ –í–∞—à –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º UX"

# ========== STREAMLIT UI ==========
st.set_page_config(page_title="UX/UI —ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", layout="centered")
st.title("üîç UX/UI —ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (PNG –∏–ª–∏ JPG)", type=["png", "jpg", "jpeg"])

if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")

    # OCR + —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    st.header("üìÑ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å")
    text, ocr_data = perform_ocr_analysis(image)
    st.text_area("–¢–µ–∫—Å—Ç —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", text, height=150)

    img_array = np.array(image)
    contrast_warnings = check_text_contrast(img_array, ocr_data)

    if not contrast_warnings:
        st.success("–¢–µ–∫—Å—Ç –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å")
    else:
        for w in contrast_warnings:
            st.warning(w)

    # –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    clutter_info = analyze_clutter(ocr_data, image.size)
    st.subheader("üìä –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    st.write(f"–≠–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—Å—Ç–∞: {clutter_info['num_elements']}")
    st.write(f"–ü–ª–æ—â–∞–¥—å —Ç–µ–∫—Å—Ç–∞ –∫ –æ–±—â–µ–π: {clutter_info['area_ratio']}")
    st.write(f"–ü–ª–æ—Ç–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞: {clutter_info['text_density']}")
    st.write(f"–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è: {clutter_info['cluster_score']}")
    if clutter_info["is_cluttered"]:
        st.warning("‚ö† **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω**")
    else:
        st.success("‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω")

    # –û–±—â–∏–µ –≤—ã–≤–æ–¥—ã
    st.header("–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")

    if contrast_warnings:
        st.markdown("### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏")
        st.markdown("–ò–∑—É—á–∏—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã WCAG")
        st.markdown("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—â—É—Ä–∏—Ç—å –≥–ª–∞–∑–∞ –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç. –ï—Å–ª–∏ –æ–Ω –ø–ª–æ—Ö–æ —á–∏—Ç–∞–µ—Ç—Å—è, —Å–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ "
                    "–∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–µ–µ –∏–ª–∏ —É–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞–∑–º–µ—Ä")

    if clutter_info["is_cluttered"]:
        st.markdown("### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        st.markdown("#### –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã")
        st.markdown("üí° –ó–∞–¥–∞–π —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å: –∫–∞–∫—É—é –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Ä–µ—à–∏—Ç—å –Ω–∞ —ç—Ç–æ–º —ç–∫—Ä–∞–Ω–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å?")
        st.markdown("‚ùó –°–æ—Ö—Ä–∞–Ω–∏ —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É.")
        st.markdown("#### –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—É—Å—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ")
        st.markdown("üßò –ù–µ –±–æ–π—Å—è –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ ‚Äî –æ–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –≥–ª–∞–∑—É –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è.")
        st.markdown("#### –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç")
        st.markdown("‚úÇÔ∏è –£–±–∏—Ä–∞–π –≤–≤–æ–¥–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ ¬´–≤–æ–¥—É¬ª. –ü—Ä–∏–º–µ—Ä: –≤–º–µ—Å—Ç–æ ¬´–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É¬ª ‚Üí ¬´–ù–∞—á–∞—Ç—å¬ª.")
        st.markdown("#### –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã –∏ —Ü–≤–µ—Ç–∞ —Å —É–º–æ–º")
        st.markdown("üé® –û–≥—Ä–∞–Ω–∏—á—å –ø–∞–ª–∏—Ç—Ä—É –¥–æ 2‚Äì3 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ + –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–æ–Ω.")
        st.markdown("üö¶ –¶–≤–µ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è: –≤—ã–¥–µ–ª–∏ –≥–ª–∞–≤–Ω–æ–µ, –∞ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ ‚Äî –ø—Ä–∏–≥–ª—É—à–∏.")
        st.markdown("#### –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –∏ –¥–µ–π—Å—Ç–≤–∏–π")
        st.markdown("üëá –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ –ø–æ—Ö–æ–∂–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å¬ª –∏ ¬´–ì–æ—Ç–æ–≤–æ¬ª).")
        st.markdown("üì§ –£–±–µ—Ä–∏—Ç–µ —Ä–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ –º–µ–Ω—é ¬´–µ—â—ë¬ª.")

    if not (contrast_warnings or clutter_info["is_cluttered"]):
        st.success(good_text)
